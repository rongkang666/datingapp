{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/_resolvers/member-detail.resolver.ts","webpack:///./src/_resolvers/member-edit.resolver.ts","webpack:///./src/_resolvers/messages.resolver.ts","webpack:///./src/app/_guards/auth.guard.ts","webpack:///./src/app/_guards/prevent-unsaved-changes.guard.ts","webpack:///./src/app/_services/alertify.service.ts","webpack:///./src/app/_services/auth.service.ts","webpack:///./src/app/_services/user.service.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/lists/lists.component.html","webpack:///./src/app/lists/lists.component.ts","webpack:///./src/app/member-card/member-card.component.html","webpack:///./src/app/member-card/member-card.component.ts","webpack:///./src/app/member-detail/member-detail.component.html","webpack:///./src/app/member-detail/member-detail.component.ts","webpack:///./src/app/member-edit/member-edit.component.html","webpack:///./src/app/member-edit/member-edit.component.ts","webpack:///./src/app/member-list/member-list.component.html","webpack:///./src/app/member-list/member-list.component.ts","webpack:///./src/app/member-messages/member-messages.component.html","webpack:///./src/app/member-messages/member-messages.component.ts","webpack:///./src/app/messages/messages.component.html","webpack:///./src/app/messages/messages.component.ts","webpack:///./src/app/nav/nav.component.html","webpack:///./src/app/nav/nav.component.ts","webpack:///./src/app/photo-editor/photo-editor.component.html","webpack:///./src/app/photo-editor/photo-editor.component.ts","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","// tslint:disable-next-line:quotemark\nimport { Injectable } from \"@angular/core\";\nimport { Resolve, Router, ActivatedRoute, ActivatedRouteSnapshot } from '@angular/router';\nimport { User } from 'src/app/_models/User';\nimport { UserService } from 'src/app/_services/user.service';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\nimport { Observable, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n\n@Injectable()\nexport class MemberDetailResolver implements Resolve<User> {\n    constructor(private userService: UserService, private router: Router, private aletify: AlertifyService) {}\n\n    resolve(route: ActivatedRouteSnapshot): Observable<User> {\n        // tslint:disable-next-line:no-string-literal\n        return this.userService.getUser(route.params['id']).pipe(\n            catchError(error => {\n                this.aletify.error('Problem retrieving data');\n                this.router.navigate(['/members']);\n                return of(null);\n            })\n        );\n    }\n\n}\n","// tslint:disable-next-line:quotemark\nimport { Injectable } from \"@angular/core\";\nimport { Resolve, Router, ActivatedRoute, ActivatedRouteSnapshot } from '@angular/router';\nimport { User } from 'src/app/_models/User';\nimport { UserService } from 'src/app/_services/user.service';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\nimport { Observable, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { AuthService } from 'src/app/_services/auth.service';\n\n\n@Injectable()\nexport class MemberEditResolver implements Resolve<User> {\n    constructor(private userService: UserService, private router: Router, private aletify: AlertifyService,\n        // tslint:disable-next-line:align\n        private authService: AuthService) {}\n\n    resolve(route: ActivatedRouteSnapshot): Observable<User> {\n        // tslint:disable-next-line:no-string-literal\n        return this.userService.getUser(this.authService.decodedToken.nameid).pipe(\n            catchError(error => {\n                this.aletify.error('Problem retrieving your data');\n                this.router.navigate(['/members']);\n                return of(null);\n            })\n        );\n    }\n\n}\n","// tslint:disable-next-line:quotemark\nimport { Injectable } from \"@angular/core\";\nimport { Resolve, Router, ActivatedRoute, ActivatedRouteSnapshot } from '@angular/router';\n\nimport { UserService } from 'src/app/_services/user.service';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\nimport { Observable, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Message } from 'src/app/_models/message';\nimport { AuthService } from 'src/app/_services/auth.service';\n\n\n@Injectable()\nexport class MessagesResolver implements Resolve<Message[]> {\n\n    messageContainer = 'Unread';\n\n    constructor(private userService: UserService, private router: Router,\n                private aletify: AlertifyService, private authService: AuthService) {}\n\n    resolve(route: ActivatedRouteSnapshot): Observable<Message[]> {\n        // tslint:disable-next-line:no-string-literal\n        return this.userService.getMessages(this.authService.decodedToken.nameid, this.messageContainer).pipe(\n            catchError(error => {\n                this.aletify.error('Problem retrieving messages');\n                this.router.navigate(['/home']);\n                return of(null);\n            })\n        );\n    }\n\n}\n","import { Injectable } from '@angular/core';\n// tslint:disable-next-line:max-line-length\nimport { CanActivate, Router} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../_services/auth.service';\nimport { AlertifyService } from '../_services/alertify.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private authService: AuthService, private router: Router, private aletify: AlertifyService) {}\n\n  canActivate(): boolean {\n\n    if (this.authService.loggedIn()) {\n      return true;\n    }\n\n    this.aletify.error('Ypu are not allowed to pass!');\n    this.router.navigate(['/home']);\n\n    return false;\n  }\n\n}\n","// tslint:disable-next-line:quotemark\nimport { Injectable } from '@angular/core';\nimport { CanDeactivate } from '@angular/router';\nimport { MemberEditComponent } from '../member-edit/member-edit.component';\n\n\n@Injectable()\nexport class PreventUnsavedChanges implements CanDeactivate<MemberEditComponent> {\n    canDeactivate(component: MemberEditComponent) {\n        if (component.editForm.dirty) {\n            return confirm('Are you sure to leave withoiut saving changes?');\n        }\n        return true;\n    }\n}\n","\nimport { Injectable } from '@angular/core';\n\ndeclare let alertify: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertifyService {\n\nconstructor() { }\n\n\n\nsuccess(message: any) {\n  alertify.success(message);\n}\n\nerror(message: any) {\n  alertify.error(message);\n}\n\nwarning(message: any) {\n  alertify.warning(message);\n}\n\nmessage(message: any) {\n  alertify.message(message);\n}\n\n\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {BehaviorSubject} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {JwtHelperService} from '@auth0/angular-jwt';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../_models/User';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  baseUrl = environment.apiUrl + 'auth/';\n  jwtHelper = new JwtHelperService();\n  decodedToken: any;\n  currentUser: User;\n\n  // communication between different components\n  photoUrl = new BehaviorSubject<string>('../../assets/user.png');\n  currentPhotoUrl = this.photoUrl.asObservable();\n\nconstructor(private http: HttpClient) { }\n\nchangMemberPhoto(photoUrl: string) {\n  this.photoUrl.next(photoUrl);\n}\n\nlogin(model: any) {\n\n  return this.http.post(this.baseUrl + 'login', model).pipe(\n\n    map ((response: any) => {\n      const user = response;\n      if (user) {\n        localStorage.setItem('token', user.token);\n        localStorage.setItem('user', JSON.stringify(user.user));\n        this.decodedToken = this.jwtHelper.decodeToken(user.token);\n\n        this.currentUser = user.user;\n\n        this.changMemberPhoto(this.currentUser.photoUrl);\n      }\n    })\n  );\n\n\n}\n\nregister(model: any) {\n\n  return this.http.post(this.baseUrl + 'register', model);\n\n}\n\nloggedIn() {\n  const token = localStorage.getItem('token');\n  return !this.jwtHelper.isTokenExpired(token);\n}\n\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from '../_models/User';\nimport { Message } from '../_models/message';\n\n\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  baseUrl = environment.apiUrl;\n\nconstructor(private http: HttpClient) { }\n\ngetUsers(): Observable<User[]> {\n  return this.http.get<User[]>(this.baseUrl + 'users');\n}\n\ngetUser(id: any): Observable<User> {\n  return this.http.get<User>(this.baseUrl + 'users/' + id);\n}\n\nupdateUser(id: number, user: User) {\n  return this.http.put(this.baseUrl + 'users/' + id, user);\n}\n\ndeleteUser(id: number) {\n  return this.http.delete(this.baseUrl + 'users/' + id);\n}\n\nsetMainPhoto(userId: number, id: number) {\n  return this.http.post(this.baseUrl + 'users/' + userId + '/photos/' + id + '/setMain', {});\n}\n\ndeletePhoto(userId: number, id: number) {\n  return this.http.delete(this.baseUrl + 'users/' + userId + '/photos/' + id);\n}\n\nsendLike(id: number, recipientId: number) {\n  return this.http.post(this.baseUrl + 'users/' + id + '/like/' + recipientId, {});\n}\n\ngetLikers(id: number): Observable<User[]> {\n  return this.http.get<User[]>(this.baseUrl + 'users/' + id + '/getLikers');\n}\n\ngetMessages(id: number, messageContainer?) {\n  return this.http.get<Message[]>(this.baseUrl + 'users/' + id + '/message?MessageContainer=' + messageContainer);\n}\n\ngetMessageThread(id: number, recipientId: number) {\n  return this.http.get<Message[]>(this.baseUrl + 'users/' + id + '/message/thread/' + recipientId);\n}\n\nsendMessage(id: number, message: Message) {\n  return this.http.post(this.baseUrl + 'users/' + id + '/message', message);\n}\n\ndeleteMessage(id: number, userId: number) {\n  return this.http.post(this.baseUrl + 'users/' + userId + '/message/' + id, {});\n}\n\nmarkMessageRead(userId: number, id: number) {\n  return this.http.post(this.baseUrl + 'users/' + userId + '/message/' + id + '/read', {}).subscribe();\n}\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { MemberListComponent } from './member-list/member-list.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { ListsComponent } from './lists/lists.component';\nimport { AuthGuard } from './_guards/auth.guard';\nimport { MemberDetailComponent } from './member-detail/member-detail.component';\nimport { MemberDetailResolver } from 'src/_resolvers/member-detail.resolver';\nimport { MemberEditComponent } from './member-edit/member-edit.component';\nimport { MemberEditResolver } from 'src/_resolvers/member-edit.resolver';\nimport { PreventUnsavedChanges } from './_guards/prevent-unsaved-changes.guard';\nimport { MessagesResolver } from 'src/_resolvers/messages.resolver';\n\nconst routes: Routes = [\n  {path: '', component: HomeComponent},\n\n  {\n    path: '',\n    runGuardsAndResolvers: 'always',\n    canActivate: [AuthGuard],\n    children: [\n\n      {path: 'members', component: MemberListComponent},\n      {path: 'members/:id', component: MemberDetailComponent, resolve: {user: MemberDetailResolver}},\n      {path: 'member/edit', component: MemberEditComponent, resolve: {user: MemberEditResolver}, canDeactivate: [PreventUnsavedChanges]},\n      {path: 'messages', component: MessagesComponent, resolve: {messages: MessagesResolver}},\n      {path: 'lists', component: ListsComponent}\n    ]\n  },\n  {path: '**', redirectTo: '', pathMatch: 'full'}\n\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","\n<app-nav></app-nav>\n<router-outlet ></router-outlet>\n\n<p class=\"text-muted text-center\" id=\"footerNote\">Powered by Kang {{currentYear}}</p>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './_services/auth.service';\nimport {JwtHelperService} from '@auth0/angular-jwt';\nimport { User } from './_models/User';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  jwtHelper = new JwtHelperService();\n\n  currentYear: number;\n\n  constructor(private authService: AuthService) {\n    this.currentYear = new Date().getFullYear();\n  }\n\n  ngOnInit() {\n    const token = localStorage.getItem('token');\n    const user: User = JSON.parse(localStorage.getItem('user'));\n\n    if (token != null) {\n      this.authService.decodedToken = this.jwtHelper.decodeToken(token);\n    }\n    if (user != null) {\n      this.authService.currentUser = user;\n    }\n    if (user.photoUrl != null) {\n      this.authService.changMemberPhoto(user.photoUrl);\n    }\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport {NgxPaginationModule} from 'ngx-pagination';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {BsDropdownModule, TabsModule, BsDatepickerModule} from 'ngx-bootstrap';\nimport {NgxGalleryModule} from 'ngx-gallery';\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { NavComponent } from './nav/nav.component';\nimport { AuthService } from './_services/auth.service';\nimport {AlertifyService} from './_services/alertify.service';\n\nimport { RegisterComponent } from './register/register.component';\nimport { HomeComponent } from './home/home.component';\nimport { ListsComponent } from './lists/lists.component';\nimport { MemberListComponent } from './member-list/member-list.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { AuthGuard } from './_guards/auth.guard';\nimport { MemberCardComponent } from './member-card/member-card.component';\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { MemberDetailComponent } from './member-detail/member-detail.component';\nimport { MemberDetailResolver } from 'src/_resolvers/member-detail.resolver';\nimport { MemberEditResolver } from 'src/_resolvers/member-edit.resolver';\nimport { MemberEditComponent } from './member-edit/member-edit.component';\nimport { PreventUnsavedChanges } from './_guards/prevent-unsaved-changes.guard';\nimport { PhotoEditorComponent } from './photo-editor/photo-editor.component';\nimport { FileUploadModule } from 'ng2-file-upload';\n\nimport {TimeAgoPipe} from 'time-ago-pipe';\nimport { MessagesResolver } from 'src/_resolvers/messages.resolver';\nimport { MemberMessagesComponent } from './member-messages/member-messages.component';\n\n\nexport function tokenGetter() {\n   return localStorage.getItem('token');\n}\n\n\n@NgModule({\n   declarations: [\n      AppComponent,\n      NavComponent,\n      RegisterComponent,\n      HomeComponent,\n      ListsComponent,\n      MemberListComponent,\n      MessagesComponent,\n      MemberCardComponent,\n      MemberDetailComponent,\n      MemberEditComponent,\n      PhotoEditorComponent,\n      TimeAgoPipe,\n      MemberMessagesComponent\n   ],\n   imports: [\n      BrowserModule,\n      NgxPaginationModule,\n      AppRoutingModule,\n      HttpClientModule,\n      FormsModule,\n      BsDropdownModule.forRoot(),\n      BsDatepickerModule.forRoot(),\n      ReactiveFormsModule,\n      TabsModule.forRoot(),\n      NgxGalleryModule,\n      FileUploadModule,\n      JwtModule.forRoot({\n         config: {\n           // tslint:disable-next-line:object-literal-shorthand\n           tokenGetter: tokenGetter,\n           whitelistedDomains: ['localhost:5000'],\n           blacklistedRoutes: ['localhost:5000/api/auth']\n         }\n       })\n      ],\n   providers: [\n      AuthService,\n      AlertifyService,\n      AuthGuard,\n      PreventUnsavedChanges,\n      MemberDetailResolver,\n      MemberEditResolver,\n      MessagesResolver\n   ],\n   bootstrap: [\n      AppComponent\n   ]\n})\nexport class AppModule { }\n\n\n// imports: [\n//    BrowserModule,\n//    AppRoutingModule,\n//    HttpClientModule,\n//    FormsModule,\n//    BsDropdownModule.forRoot(),\n//    TabsModule.forRoot(),\n//    NgxGalleryModule,\n//    FileUploadModule,\n//    JwtModule.forRoot({\n//       config: {\n//         // tslint:disable-next-line:object-literal-shorthand\n//         tokenGetter: tokenGetter,\n//         whitelistedDomains: ['localhost:5000'],\n//         blacklistedRoutes: ['localhost:5000/api/auth']\n//       }\n//     })\n//    ],\n","\n<div *ngIf=\"!registerMode\" class=\"container mt-5\">\n  <div style=\"text-align:center\">\n    <h1>Find your match</h1>\n    <p class=\"lead\">All you need is to sign up</p>\n    <div class=\"text-container\">\n      <button class=\"btn btn-primary btn-lg mr-2\" (click)=\"registerToggle()\">Register</button>\n      <button class=\"btn btn-info btn-lg\">Learn more</button>\n    </div>\n\n  </div>\n</div>\n\n  <div *ngIf=\"registerMode\" class=\"container\">\n    <div class=\"row justify-content-center\">\n      <div class=\"col-6\">\n       <app-register (cancelRegister)=\"cancelRegisterMode($event)\"></app-register>\n      </div>\n    </div>\n  </div>\n\n\n\n\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  registerMode = false;\n  values: any;\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit() {\n    // this.getValues();\n  }\n\n  registerToggle() {\n    this.registerMode = true;\n  }\n\n  // getValues() {\n  //   this.http.get('http://localhost:5000/api/values').subscribe(\n  //     response => {\n  //       this.values = response;\n  //     },\n  //     error => {\n  //       console.log(error);\n  //     }\n\n  //   );\n  // }\n  cancelRegisterMode(registerMode: boolean) {\n    this.registerMode = registerMode;\n  }\n\n}\n","\n\n<div class=\"container\">\n  <br>\n  <h2>Who likes you</h2>\n  <br>\n  <div class=\"row\">\n    <div *ngFor=\"let user of users\" class=\"col-lg-2 col-md-3 col-sm-6\">\n\n\n\n        <div class=\"card mb-4\">\n            <div class=\"card-img-wrapper\">\n              <img \n\n              src=\"{{user.photoUrl || '../../assets/user.png'}}\" alt=\"{{user.knownAs}}\" class=\"card-img-top\">\n              <ul class=\"list-inline text-center animate member-icons\">\n                <li class=\"list-inline-item\"><button class=\"btn btn-primary\" [routerLink]=\"['/members/', user.id]\"><i class=\"fa fa-user\"></i></button></li>\n                <li class=\"list-inline-item\"><button class=\"btn btn-primary\" ><i class=\"fa fa-heart\"></i></button></li>\n                \n              </ul>\n            </div>\n            <div class=\"card-body p-1\">\n              <h6 class=\"card-title text-center mb-1 \">\n                <i class=\"fa fa-user\"></i>{{user.username}}, {{user.age}}\n              </h6> \n            </div>\n            <p class=\"card-text text-muted text-center\">{{user.city}}</p>\n          </div>\n          \n\n\n\n\n\n\n\n      \n    </div>\n  </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { User } from '../_models/User';\nimport { AuthService } from '../_services/auth.service';\nimport { UserService } from '../_services/user.service';\nimport { AlertifyService } from '../_services/alertify.service';\n\n@Component({\n  selector: 'app-lists',\n  templateUrl: './lists.component.html',\n  styleUrls: ['./lists.component.css']\n})\nexport class ListsComponent implements OnInit {\n\n  users: User[];\n\n  constructor(private authService: AuthService, private userService: UserService, private alertify: AlertifyService) { }\n\n  ngOnInit() {\n    this.userService.getLikers(this.authService.decodedToken.nameid).subscribe(data => {\n      this.users = data;\n    }, error => {\n      this.alertify.error(error);\n    });\n  }\n}\n","\n<div class=\"card mb-4\" [ngStyle]=\"{'border': currentUserId == user.id ? '5px red solid' : 'none', \n'border-radius': currentUserId == user.id ? '10px' : 'none'}\">\n  <div class=\"card-img-wrapper\">\n    <img src=\"{{user.photoUrl || '../../assets/user.png'}}\" alt=\"{{user.knownAs}}\" class=\"card-img-top\">\n    <ul class=\"list-inline text-center animate member-icons\" *ngIf=\"currentUserId != user.id\">\n      <li class=\"list-inline-item\"><button class=\"btn btn-primary\" [routerLink]=\"['/members/', user.id]\"><i class=\"fa fa-user\"></i></button></li>\n      <li class=\"list-inline-item\"><button class=\"btn btn-primary\" (click)=\"sendLike(user.id)\" ><i class=\"fa fa-heart\"></i></button></li>\n      <li class=\"list-inline-item\"><button class=\"btn btn-primary\" [routerLink]=\"['/members/', user.id]\" [queryParams]=\"{tab: 3}\"><i class=\"fa fa-envelope\"></i></button></li>\n    </ul>\n  </div>\n  <div class=\"card-body p-1\">\n    <h6 class=\"card-title text-center mb-1 \">\n      <i class=\"fa fa-user\"></i>{{user.username}}, {{user.age}}\n    </h6> \n  </div>\n  <p class=\"card-text text-muted text-center\">{{user.city}}</p>\n</div>\n\n","import { Component, OnInit, Input } from '@angular/core';\nimport { User } from '../_models/User';\nimport { AuthService } from '../_services/auth.service';\nimport { UserService } from '../_services/user.service';\nimport { AlertifyService } from '../_services/alertify.service';\n\n@Component({\n  selector: 'app-member-card',\n  templateUrl: './member-card.component.html',\n  styleUrls: ['./member-card.component.css']\n})\nexport class MemberCardComponent implements OnInit {\n\n  @Input() user: User;\n\n  currentUserId: number = this.authService.decodedToken.nameid;\n\n  constructor(private authService: AuthService, private userService: UserService, private alertify: AlertifyService) { }\n\n  ngOnInit() {\n }\n\n  sendLike(id: number) {\n    this.userService.sendLike(this.authService.decodedToken.nameid, id).subscribe(data => {\n      this.alertify.success('You have liked ' + this.user.knownAs);\n    }, error => {\n      this.alertify.error('You have already liked this person');\n    });\n  }\n\n}\n","\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-sm-4\">\n      <div class=\"card\">\n        <img src=\"{{user?.photoUrl || '../../assets/user.png'}}\" alt=\"{{user?.knownAs}}\" class=\"card-img-top img-thumbnail\">\n        <div class=\"card-body\">\n          <div>\n            <strong>Location</strong>\n            <p>{{user?.city}}, {{user?.country}}</p>\n          </div>\n          <div>\n            <strong>Age</strong>\n            <p>{{user?.age}}</p>\n          </div>\n          <div>\n            <strong>Last Active</strong>\n            <p>{{user?.lastActive | timeAgo}}</p>\n          </div>\n          <div>\n            <strong>Member since</strong>\n            <p>{{user?.created | date: 'mediumDate'}}</p>\n          </div>\n        </div>\n        <div class=\"card-footer\">\n          <div class=\"btn-group d-flex\">\n            <button class=\"btn btn-primary w-100\" (click)=\"sendLike(user.id)\">\n              Like\n            </button>\n            <button class=\"btn btn-success w-100\" (click)=\"selectTab(3)\">\n              Message\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"col-sm-8\">\n      <div class=\"tab-panel\">\n        <tabset class=\"member-tabset\" #memberTabs>\n        <tab heading=\"About {{user?.knownAs}}\">\n            <h4>Description</h4>\n            <p>{{user?.introduction}}</p>\n            <h4>Looking for</h4>\n            <p>{{user?.lookingFor}}</p>\n          </tab>\n          <tab heading=\"Interests\">\n              <p>{{user?.interests}}</p>\n            </tab>\n        <tab heading=\"Photos\">\n          <ngx-gallery [options]=\"galleryOptions\" [images]=\"galleryImages\"></ngx-gallery>\n          <!-- {{user.photos[0].url}} -->\n        </tab>\n        <tab heading=\"Messages\">\n            <app-member-messages [recipientId]=\"user.id\" [myRecipient]=\"user.knownAs\"></app-member-messages>\n          </tab>\n\n        </tabset>\n\n      </div>\n    </div>\n\n  </div>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { User } from '../_models/User';\nimport { UserService } from '../_services/user.service';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { NgxGalleryOptions, NgxGalleryImage, NgxGalleryAnimation } from 'ngx-gallery';\nimport { TabsetComponent } from 'ngx-bootstrap';\nimport { AuthService } from '../_services/auth.service';\n\n@Component({\n  selector: 'app-member-detail',\n  templateUrl: './member-detail.component.html',\n  styleUrls: ['./member-detail.component.css']\n})\nexport class MemberDetailComponent implements OnInit {\n\n  @ViewChild('memberTabs', {static: true}) memberTabs: TabsetComponent;\n  user: User;\n  galleryOptions: NgxGalleryOptions[];\n  galleryImages: NgxGalleryImage[];\n\n  constructor(private userService: UserService, private alertify: AlertifyService,\n    // tslint:disable-next-line:align\n    private route: ActivatedRoute, private authService: AuthService) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      // tslint:disable-next-line:no-string-literal\n      this.user = data['user'];\n    });\n\n    this.route.queryParams.subscribe(params => {\n        // tslint:disable-next-line:no-string-literal\n        const selectedTab = params['tab'];\n        this.memberTabs.tabs[selectedTab > 0 ? selectedTab : 0].active = true;\n    });\n\n     // tslint:disable-next-line:align\n     this.galleryOptions = [{\n      width: '500px',\n      height: '500px',\n      imagePercent: 100,\n      thumbnailsColumns: 4,\n      imageAnimation: NgxGalleryAnimation.Slide,\n      preview: false\n    }];\n\n    this.galleryImages = this.getImages();\n\n  }\n\n  getImages() {\n    const imageUrls = [];\n\n    // tslint:disable-next-line:prefer-for-of\n    for (let i = 0; i < this.user.photos.length; i++) {\n      imageUrls.push({\n        small: this.user.photos[i].url,\n        medium: this.user.photos[i].url,\n        big: this.user.photos[i].url,\n        desciption: this.user.photos[i].description\n\n      });\n    }\n\n    return imageUrls;\n  }\n\n  selectTab(tabId: number) {\n    this.memberTabs.tabs[tabId].active = true;\n  }\n\n  sendLike(id: number) {\n    this.userService.sendLike(this.authService.decodedToken.nameid, id).subscribe(data => {\n      this.alertify.success('You have liked ' + this.user.knownAs);\n    }, error => {\n      this.alertify.error('You have already liked this person');\n    });\n  }\n\n\n\n\n}\n","\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-sm-4\"><h1>Your Profile</h1></div>\n    <div class=\"col-sm-8\">\n      <div class=\"alert alert-info\" *ngIf=\"editForm.dirty\">\n        <p><strong>Information</strong>You have made changes. Any unsaved changes will be lost.</p>\n      </div>\n\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-sm-4\">\n      <div class=\"card\">\n        <img src=\"{{photoUrl || '../../assets/user.png'}}\" alt=\"{{user?.knownAs}}\" class=\"card-img-top img-thumbnail\">\n        <div class=\"card-body\">\n          <div>\n            <strong>Location</strong>\n            <p>{{user?.city}}, {{user?.country}}</p>\n          </div>\n          <div>\n            <strong>Age</strong>\n            <p>{{user?.age}}</p>\n          </div>\n          <div>\n            <strong>Last Active</strong>\n            <p>{{user?.lastActive | timeAgo}}</p>\n          </div>\n          <div>\n            <strong>Member since</strong>\n            <p>{{user?.created | date: 'mediumDate'}}</p>\n          </div>\n        </div>\n        <div class=\"card-footer\">\n          <div class=\"btn-group d-flex\">\n            <button class=\"btn btn-success btn-block\" form=\"edit_form\" [disabled]=\"!editForm.dirty\">\n              Save\n            </button>\n          </div>\n          <button class=\"btn btn-danger btn-block mt-1\" (click)=\"deleteUser(user.id)\">\n            Delete\n          </button>\n        </div>\n        \n      </div>\n    </div>\n\n    <div class=\"col-sm-8\">\n      <div class=\"tab-panel\">\n        <tabset class=\"member-tabset\">\n        <tab heading=\"Edit Profile\">\n          <form #editForm=\"ngForm\" id=\"edit_form\" (ngSubmit)=\"updateUser(editForm)\">\n              <h4>Description</h4>\n              <textarea name=\"introduction\" rows=\"6\" class=\"form-control\" [(ngModel)]=\"user.introduction\"></textarea>\n              <h4>Lokking For</h4>\n              <textarea name=\"lookingFor\" rows=\"6\" class=\"form-control\" [(ngModel)]=\"user.lookingFor\"></textarea>\n              <h4>Interests</h4>\n              <textarea name=\"interests\" rows=\"6\" class=\"form-control\" [(ngModel)]=\"user.interests\"></textarea>\n              <h4>Location Details</h4>\n              <div class=\"form-inline\">\n                <label for=\"city\">City</label>\n                <input type=\"text\" class=\"form-control\" name=\"city\" [(ngModel)]=\"user.city\">\n                <label for=\"country\">Country</label>\n                <input type=\"text\" class=\"form-control\" name=\"country\" [(ngModel)]=\"user.country\">\n              </div>\n            \n          </form>\n           \n        </tab>\n        <tab heading=\"Edit Photo\">\n          <app-photo-editor [photos]=\"user.photos\" (getMemberPhotoChange)=\"updateMemberPhoto($event)\"></app-photo-editor>\n        </tab>\n          \n        \n\n        </tabset>\n\n      </div>\n    </div>\n\n  </div>\n</div>\n","import { Component, OnInit, ViewChild, HostListener } from '@angular/core';\nimport { User } from '../_models/User';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { NgForm } from '@angular/forms';\nimport { UserService } from '../_services/user.service';\nimport { AuthService } from '../_services/auth.service';\n\n@Component({\n  selector: 'app-member-edit',\n  templateUrl: './member-edit.component.html',\n  styleUrls: ['./member-edit.component.css']\n})\nexport class MemberEditComponent implements OnInit {\n\n  @ViewChild('editForm', {static: false}) editForm: NgForm;\n\n  user: User;\n  photoUrl: string;\n\n  @HostListener('window:beforeunload', ['$event'])\n  unloadNotification($event: any) {\n    if (this.editForm.dirty) {\n      $event.returnValue = true;\n    }\n  }\n\n  constructor(private route: ActivatedRoute, private aletify: AlertifyService, private userService: UserService,\n    // tslint:disable-next-line:align\n    private authService: AuthService, private router: Router) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      // tslint:disable-next-line:no-string-literal\n      this.user = data['user'];\n    });\n    this.authService.currentPhotoUrl.subscribe(photoUrl => this.photoUrl = photoUrl);\n  }\n\n  updateUser(editForm) {\n    this.userService.updateUser(this.authService.decodedToken.nameid, this.user).subscribe(next => {\n      this.aletify.success('Updated successfully');\n      // console.log(editForm);\n      // console.log(this.editForm);\n       // tslint:disable-next-line:align\n       editForm.reset(this.user);\n    }, error => {\n      this.aletify.error(error);\n    });\n\n  }\n\n  updateMemberPhoto(photoUrl) {\n    this.user.photoUrl = photoUrl;\n  }\n\n  deleteUser(id: number) {\n    this.userService.deleteUser(id).subscribe(() => {\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n\n      this.authService.decodedToken = null;\n      this.authService.currentUser = null;\n\n      this.router.navigate(['']);\n    }, error => {\n      this.aletify.error(error);\n    });\n  }\n\n}\n","\n\n\n<div class=\"container mt-5\">\n  <div class=\"row\">\n    \n    <div class=\"col-sm-4 filter-field\">\n        <label for=\"gender\" class=\"mr-2\"><strong class=\"text-info\">Gender filter:</strong></label>\n        <select [(ngModel)]=\"genderFilter\">\n            <option>All</option>\n            <option>Male</option>\n            <option>Female</option>\n        </select>\n    </div>\n\n    <div class=\"col-sm-8 filter-field\">\n      \n\n        <label for=\"age\" class=\"mr-2\"><strong class=\"text-info\">Age filter:</strong></label>\n        <span>From</span>\n        <input type=\"number\" min=\"18\" max=\"40\" class=\"age-field\" [(ngModel)]=\"minAge\">\n        <span>to</span> \n            <input type=\"number\" min=\"41\" max=\"99\" [(ngModel)]=\"maxAge\">\n            \n            <button type=\"submit\" class=\"btn btn-primary ml-2 age-btn\" (click)=\"applyAgeFilter()\">Apply</button>\n            \n        \n    </div>\n  \n\n\n  </div>\n\n  <div class=\"row mt-3\">\n      <ng-container *ngIf=\"genderFilter == 'Female'\">\n          <div *ngFor=\"let user of females | paginate: { itemsPerPage: 6, currentPage: p}\" class=\"col-lg-2 col-md-3 col-sm-6\">\n              <app-member-card [user]=\"user\"></app-member-card>\n          </div>\n      </ng-container>  \n      <ng-container *ngIf=\"genderFilter == 'Male'\">\n          <div *ngFor=\"let user of males | paginate: { itemsPerPage: 6, currentPage: p}\" class=\"col-lg-2 col-md-3 col-sm-6\">\n              <app-member-card [user]=\"user\"></app-member-card>\n          </div>\n      </ng-container>  \n      <ng-container *ngIf=\"genderFilter == 'All'\">\n          <div *ngFor=\"let user of allUsers | paginate: { itemsPerPage: 6, currentPage: p}\" class=\"col-lg-2 col-md-3 col-sm-6\">\n              <app-member-card [user]=\"user\"></app-member-card>\n          </div>\n      </ng-container>  \n\n      \n\n        <h2 class=\"text-center\" id=\"no-found\" *ngIf=\"females.length == 0 || males.length == 0 || allUsers.length == 0\">\n          \n          No results found</h2>\n\n      \n\n  </div>\n  <pagination-controls (pageChange)=\"p = $event\" class=\"match-pagination\"\n  *ngIf=\"!(females.length == 0 || males.length == 0 || allUsers.length == 0)\"\n  ></pagination-controls>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { User } from '../_models/User';\nimport { HttpClient } from 'selenium-webdriver/http';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { UserService } from '../_services/user.service';\nimport { AuthService } from '../_services/auth.service';\n\n@Component({\n  selector: 'app-member-list',\n  templateUrl: './member-list.component.html',\n  styleUrls: ['./member-list.component.css']\n})\nexport class MemberListComponent implements OnInit {\n\n  users: User[];\n  males: User[] = [];\n  females: User[] = [];\n  allUsers: User[] = [];\n  minAge = 18;\n  maxAge = 41;\n\n  currentUserId: number = this.authService.decodedToken.nameid;\n  p = 1;\n\n  genderFilter = 'All';\n\n  constructor(private userService: UserService, private aletify: AlertifyService, private authService: AuthService) { }\n\n  ngOnInit() {\n    this.loadUsers();\n  }\n\n  loadUsers() {\n   this.userService.getUsers().subscribe((users: User[]) => {\n    this.users = users;\n   }, error => {\n     this.aletify.error('Cannot get users list');\n   }, () => {\n    // console.log(this.users.length);\n\n     // tslint:disable-next-line:prefer-for-of\n     for (let i = 0; i < this.users.length; i++) {\n        if (this.users[i].gender === 'male' && this.users[i].age >= this.minAge && this.users[i].age <= this.maxAge) {\n          this.males.push(this.users[i]);\n        }\n        if (this.users[i].gender === 'female' && this.users[i].age >= this.minAge && this.users[i].age <= this.maxAge) {\n          this.females.push(this.users[i]);\n        }\n        if (this.users[i].age >= this.minAge && this.users[i].age <= this.maxAge) {\n          this.allUsers.push(this.users[i]);\n        }\n    }\n   });\n  }\n\n  applyAgeFilter() {\n    this.males.length = 0;\n    this.females.length = 0;\n    this.allUsers.length = 0;\n    // tslint:disable-next-line:prefer-for-of\n    for (let i = 0; i < this.users.length; i++) {\n      if (this.users[i].gender === 'male' && this.users[i].age >= this.minAge && this.users[i].age <= this.maxAge) {\n        this.males.push(this.users[i]);\n      }\n      if (this.users[i].gender === 'female' && this.users[i].age >= this.minAge && this.users[i].age <= this.maxAge) {\n        this.females.push(this.users[i]);\n      }\n      if (this.users[i].age >= this.minAge && this.users[i].age <= this.maxAge) {\n        this.allUsers.push(this.users[i]);\n      }\n  }\n  }\n\n}\n","<div class=\"card\">\n  <div class=\"card-body\">\n    <div *ngIf=\"messages?.length === 0\">\n        No messages yet...\n    </div>\n\n    <ul class=\"chat\">\n      <li class=\"\" *ngFor=\"let message of messages\">\n          <!-- from them -->\n\n          <div class=\"\" *ngIf=\"message.senderId == recipientId\">\n            <span class=\"chat img float-left\">\n              <img src=\"{{message.senderPhotoUrl || '../../assets/user.png'}}\" alt=\"{{message.senderKnownAs}}\" class=\"rounded-circle\">\n            </span>\n            <div class=\"chat-body\">\n              <strong class=\"primary-font\">{{message.senderKnownAs}}</strong>\n              <small class=\"text-muted float-right\">\n                <span class=\"fa fa-clock-o\">{{message.messageSent | timeAgo}}</span>\n              </small>\n            </div>\n            <p>{{message.content}}</p>\n          </div>\n\n\n          <!-- from me -->\n          <div class=\"\" *ngIf=\"message.senderId != recipientId\">\n              <span class=\"chat img float-right\">\n                <img src=\"{{message.senderPhotoUrl || '../../assets/user.png'}}\" alt=\"{{message.senderKnownAs}}\" class=\"rounded-circle\">\n              </span>\n              <div class=\"chat-body\">\n                <strong class=\"primary-font\">{{message.senderKnownAs}}</strong>\n                <small class=\"text-muted float-right\">\n                  <span *ngIf=\"!message.isRead\">(Unread)</span>\n                  <span *ngIf=\"message.isRead\">(Read {{message.dateRead | timeAgo}})</span>\n                  <span class=\"fa fa-clock-o\">{{message.messageSent | timeAgo}}</span>\n                </small>\n              </div>\n              <p>{{message.content}}</p>\n            </div>\n  \n\n\n      </li>\n    </ul>\n\n  </div>\n\n  <div class=\"card-footer\">\n    <form #messageForm=\"ngForm\" (ngSubmit)=\"messageForm.valid && sendMessages()\">\n      <div class=\"input-group\">\n        <input type=\"text\"\n        name=\"content\"\n        required\n        [(ngModel)]=\"newMessage.content\"\n        class=\"form-control input-sm\" placeholder=\"Send a message to {{myRecipient}}\">\n        <div class=\"input-group-append\">\n            <button class=\"btn btn-primary\" [disabled]=\"!messageForm.valid\">Send</button>\n          </div>\n      </div>\n      \n    </form>\n  </div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { Message } from '../_models/message';\nimport { UserService } from '../_services/user.service';\nimport { AuthService } from '../_services/auth.service';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-member-messages',\n  templateUrl: './member-messages.component.html',\n  styleUrls: ['./member-messages.component.css']\n})\nexport class MemberMessagesComponent implements OnInit {\n\n  @Input() myRecipient: string;\n  @Input() recipientId: number;\n  messages: Message[];\n  newMessage: any = {};\n\n  constructor(private userService: UserService, private authService: AuthService, private alertify: AlertifyService) { }\n\n  ngOnInit() {\n    this.loadMessages();\n  }\n\n  loadMessages() {\n    const currentUserId = +this.authService.decodedToken.nameid;\n    this.userService.getMessageThread(this.authService.decodedToken.nameid, this.recipientId)\n    .pipe(\n      tap(messages => {\n        // tslint:disable-next-line:prefer-for-of\n        for (let i = 0; i < messages.length; i++) {\n          if (messages[i].isRead === false && messages[i].recipientId === currentUserId) {\n            this.userService.markMessageRead(currentUserId, messages[i].id);\n          }\n        }\n      })\n    )\n    .subscribe(messages => {\n      this.messages = messages;\n    }, error => {\n      this.alertify.error(error);\n    });\n  }\n\n  sendMessages() {\n    this.newMessage.recipientId = this.recipientId;\n    this.userService.sendMessage(this.authService.decodedToken.nameid, this.newMessage).subscribe((message: Message) => {\n      this.messages.unshift(message);\n      this.newMessage.content = '';\n    }, error => {\n      this.alertify.error(error);\n    });\n  }\n\n}\n","<div class=\"container\">\n    <select class=\"form-control\" [(ngModel)]=\"messageContainer\">\n        <option>Unread</option>\n        <option>Inbox</option>\n        <option>Outbox</option>\n        \n      </select>\n       \n      <button class=\"btn btn-primary\" (click)=\"loadMessages()\">Get message results</button>\n      \n      <div class=\"row\" *ngIf=\"messages.length == 0\">\n        <!-- <h3 class=\"text-center\" id=\"no-message\">No messages</h3> -->\n        <i class=\"fa fa-comment fa-5x\" id=\"no-message-info\"></i>\n        <h3 class=\"text-center\" id=\"no-message\">No messages</h3>\n        \n      </div>\n      \n      <div class=\"row\" *ngIf=\"messages.length > 0\">\n        <table class=\"table table-hover\" style=\"cursor: pointer\">\n          <tr>\n            <th style=\"width: 40%\">Message</th>\n            <th style=\"width: 20%\">From / To</th>\n            <th style=\"width: 20%\">Sent / Received</th>\n            <th style=\"width: 20%\"></th>\n          </tr>\n          <tr *ngFor=\"let message of messages\" [routerLink]=\"['/members', \n            messageContainer == 'Outbox' ? message.recipientId : message.senderId]\" [queryParams]=\"{tab: 3}\">\n            <td>{{message.content}}</td>\n            <td>\n              <div *ngIf=\"messageContainer !== 'Outbox'\">\n                    <img src={{message?.senderPhotoUrl}} class=\"img-circle rounded-circle\">\n                    <strong>{{message.senderKnownAs}}</strong>\n              </div>\n              <div *ngIf=\"messageContainer == 'Outbox'\">\n                    <img src={{message?.recipientPhotoUrl}} class=\"img-circle rounded-circle\">\n                    <strong>{{message.recipientKnownAs}}</strong>\n              </div>\n            </td>\n            <td>{{message.messageSent | timeAgo}}</td>\n            <td>\n              <button class=\"btn btn-danger\" (click)=\"$event.stopPropagation()\" (click)=\"deleteMessage(message.id)\">Delete</button>\n            </td>\n          </tr>\n        </table>\n      \n      </div>\n\n</div>\n \n\n\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { Message } from '../_models/message';\nimport { UserService } from '../_services/user.service';\nimport { AuthService } from '../_services/auth.service';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n\n  messages: Message[];\n\n  messageContainer = 'Unread';\n\n  constructor(private userService: UserService, private authService: AuthService,\n              private alertify: AlertifyService, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      // tslint:disable-next-line:no-string-literal\n      this.messages = data['messages'];\n    });\n  }\n\n  loadMessages() {\n    this.userService.getMessages(this.authService.decodedToken.nameid, this.messageContainer)\n    .subscribe((messages: Message[]) => {\n      this.messages = messages;\n    }, error => {\n      this.alertify.error(error);\n    });\n  }\n\n  deleteMessage(id: number) {\n    this.userService.deleteMessage(id, this.authService.decodedToken.nameid).subscribe(() => {\n      this.messages.splice(this.messages.findIndex(m => m.id === id), 1);\n      this.alertify.success('Message has been deleted');\n    }, error => {\n      this.alertify.error(error);\n    });\n  }\n\n}\n","<nav class=\"navbar navbar-expand-md navbar-dark bg-dark\">\n\n  <div class=\"container\">\n    <a class=\"navbar-brand\" [routerLink]=\"['/home']\">Dating App</a>\n\n  \n\n  \n    <ul *ngIf=\"loggedIn()\" class=\"navbar-nav mr-auto\" id=\"web-menu\">\n      <li class=\"nav-item\" routerLinkActive=\"active\">\n        <a class=\"nav-link\" [routerLink]=\"['/members']\">Matches</a>\n      </li>\n      <li class=\"nav-item\" routerLinkActive=\"active\">\n        <a class=\"nav-link\" [routerLink]=\"['/lists']\">Lists</a>\n      </li>\n      <li class=\"nav-item\" routerLinkActive=\"active\">\n        <a class=\"nav-link\" [routerLink]=\"['/messages']\"> Message</a>\n      </li>\n      \n    </ul>\n\n\n\n    <div *ngIf=\"loggedIn()\" class=\"dropdown\" dropdown>\n      <span class=\"mr-2\">\n        <img src=\"{{photoUrl || '../../assets/user.png'}}\" alt=\"\">\n      </span>\n      <a class=\"btn btn-secondary dropdown-toggle\" dropdownToggle>\n        Welcome {{authService.decodedToken.unique_name}}\n      </a>\n    \n      <div class=\"dropdown-menu mt-3\" *dropdownMenu>\n        <a class=\"dropdown-item\" [routerLink]=\"['/member/edit']\" routerLinkActive=\"router-link-active\" >Edit Profile</a>\n        <div class=\"dropdown-divider\"></div>\n        <a class=\"dropdown-item\" (click)=\"LoggedOut()\">LogOut</a>\n      </div>\n    </div>\n\n    <form *ngIf=\"!loggedIn()\" #loginForm=\"ngForm\" class=\"form-inline my-2 my-lg-0\" (ngSubmit) = \"login()\">\n      <input class=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Username\" \n      required [(ngModel)]=\"model.username\" name =\"username\" #username = \"ngModel\">\n      <input class=\"form-control mr-sm-2\" type=\"password\" placeholder=\"Password\" \n      required [(ngModel)]=\"model.password\" name=\"password\" #password =\"ngModel\">\n\n      <button [disabled]= \"!loginForm.valid\" class=\"btn btn-success my-2 my-sm-0\" type=\"submit\">Login</button>\n    </form>\n  \n\n\n  </div>\n\n\n  \n</nav>\n<ul *ngIf=\"loggedIn()\" class=\"navbar-nav mr-auto\" id=\"mobile-menu\">\n    <li class=\"nav-item\" routerLinkActive=\"active\">\n      <a class=\"nav-link\" [routerLink]=\"['/members']\">Matches</a>\n    </li>\n    <li class=\"nav-item\" routerLinkActive=\"active\">\n      <a class=\"nav-link\" [routerLink]=\"['/lists']\">Lists</a>\n    </li>\n    <li class=\"nav-item\" routerLinkActive=\"active\">\n      <a class=\"nav-link\" [routerLink]=\"['/messages']\"> Message</a>\n    </li>\n    \n  </ul>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../_services/auth.service';\nimport {AlertifyService} from '../_services/alertify.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n\n  model: any = {};\n  photoUrl: string;\n  public innerWidth: any;\n\n\n\n\n\n  constructor(public authService: AuthService, private alertify: AlertifyService, private router: Router) { }\n\n  ngOnInit() {\n    this.authService.currentPhotoUrl.subscribe(photoUrl => this.photoUrl = photoUrl);\n  }\n\n  login() {\n    this.authService.login(this.model).subscribe(\n\n      next => {\n        console.log('log in successfully');\n        this.alertify.success('Log in successfully');\n        this.router.navigate(['/members']);\n\n      },\n      error => {\n        console.log('Failed to log in');\n        this.alertify.error('Failed to log in');\n      }\n    );\n  }\n\n  loggedIn() {\n    return this.authService.loggedIn();\n  }\n\n  LoggedOut() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n\n    this.authService.decodedToken = null;\n    this.authService.currentUser = null;\n\n    console.log('logged out');\n    this.alertify.message('Logged out');\n    this.router.navigate(['/home']);\n\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"col-sm-2\" *ngFor=\"let photo of photos\">\n    <img src=\"{{photo.url}}\" alt=\"\" class=\"img-thumbnail p-1\">\n    <div class=\"text-center\">\n      <button type=\"button\" class=\"btn btn-sm\" (click)=\"setMainPhoto(photo)\"\n      [disabled]=\"photo.isMain\"\n      [ngClass]=\"photo.isMain ? 'btn-success active' : 'btn-secondary'\"\n      >Main</button>\n       <button type=\"button\" class=\"btn btn-sm btn-danger\" (click)=\"deletePhoto(photo.id)\"\n       [disabled]=\"photo.isMain\"\n       ><i class=\"fa fa-trash-o\"></i></button>\n    </div>\n  </div>\n</div>\n\n\n\n\n<div class=\"row mt-3\">\n \n  <div class=\"col-md-3\">\n\n      <h3>Add Photos</h3>\n\n      <div ng2FileDrop\n           [ngClass]=\"{'nv-file-over': hasBaseDropZoneOver}\"\n           (fileOver)=\"fileOverBase($event)\"\n           [uploader]=\"uploader\"\n           class=\"card bg-faded p-3 text-center mb-3 my-drop-zone\">\n           <i class=\"fa fa-upload fa-3x\"></i>\n          Drop photos here\n      </div>\n\n\n      Multiple\n      <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" multiple  /><br/>\n\n      Single\n      <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" />\n  </div>\n\n  <div class=\"col-md-9\" style=\"margin-bottom: 40px\" *ngIf=\"uploader?.queue?.length\">\n\n      <h3>Upload queue</h3>\n      <p>Queue length: {{ uploader?.queue?.length }}</p>\n\n      <table class=\"table\">\n          <thead>\n          <tr>\n              <th width=\"50%\">Name</th>\n              <th>Size</th>\n              \n          </tr>\n          </thead>\n          <tbody>\n          <tr *ngFor=\"let item of uploader.queue\">\n              <td><strong>{{ item?.file?.name }}</strong></td>\n              <td *ngIf=\"uploader.options.isHTML5\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\n             \n          </tr>\n          </tbody>\n      </table>\n\n      <div>\n          <div>\n              Queue progress:\n              <div class=\"progress mb-4\">\n                  <div class=\"progress-bar\" role=\"progressbar\" [ngStyle]=\"{ 'width': uploader.progress + '%' }\"></div>\n              </div>\n          </div>\n          <button type=\"button\" class=\"btn btn-success btn-s\"\n                  (click)=\"uploader.uploadAll()\" [disabled]=\"!uploader.getNotUploadedItems().length\">\n              <span class=\"fa fa-upload\"></span> Upload \n          </button>\n          <button type=\"button\" class=\"btn btn-warning btn-s\"\n                  (click)=\"uploader.cancelAll()\" [disabled]=\"!uploader.isUploading\">\n              <span class=\"fa fa-ban\"></span> Cancel \n          </button>\n          <button type=\"button\" class=\"btn btn-danger btn-s\"\n                  (click)=\"uploader.clearQueue()\" [disabled]=\"!uploader.queue.length\">\n              <span class=\"fa fa-trash\"></span> Remove \n          </button>\n      </div>\n\n  </div>\n\n</div>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Photo } from '../_models/photo';\nimport { FileUploader } from 'ng2-file-upload';\nimport { environment } from 'src/environments/environment';\nimport { AuthService } from '../_services/auth.service';\nimport { UserService } from '../_services/user.service';\nimport { AlertifyService } from '../_services/alertify.service';\n\n\n@Component({\n  selector: 'app-photo-editor',\n  templateUrl: './photo-editor.component.html',\n  styleUrls: ['./photo-editor.component.css']\n})\nexport class PhotoEditorComponent implements OnInit {\n\n  @Input() photos: Photo[];\n  @Output() getMemberPhotoChange = new EventEmitter<string>();\n\n  baseUrl = environment.apiUrl;\n\n\n   uploader: FileUploader;\n   // tslint:disable-next-line:no-inferrable-types\n   hasBaseDropZoneOver: boolean = false;\n\n  constructor(private authService: AuthService, private userService: UserService, private aletify: AlertifyService) { }\n\n  ngOnInit() {\n    this.initializeUploader();\n  }\n\n  fileOverBase(e: any): void {\n    this.hasBaseDropZoneOver = e;\n  }\n\n  initializeUploader() {\n\n    this.uploader = new FileUploader({\n      url: this.baseUrl + 'users/' + this.authService.decodedToken.nameid + '/photos',\n      authToken: 'Bearer ' + localStorage.getItem('token'),\n      isHTML5: true,\n      allowedFileType: ['image'],\n      removeAfterUpload: true,\n      autoUpload: false,\n      maxFileSize: 10 * 1024 * 1024\n    });\n\n    this.uploader.onAfterAddingFile = (file) => {\n      file.withCredentials = false;\n    };\n\n    this.uploader.onSuccessItem = (item, response, status, headers) => {\n      if (response) {\n        const res: Photo = JSON.parse(response);\n        const photo = {\n          id: res.id,\n          url: res.url,\n          dateAdded: res.dateAdded,\n          description: res.description,\n          isMain: res.isMain\n        };\n        this.photos.push(photo);\n\n        if (photo.isMain) {\n          this.authService.changMemberPhoto(photo.url);\n          this.authService.currentUser.photoUrl = photo.url;\n          localStorage.setItem('user', JSON.stringify(this.authService.currentUser));\n        }\n      }\n    };\n\n  }\n\n  setMainPhoto(photo: Photo) {\n    this.userService.setMainPhoto(this.authService.decodedToken.nameid, photo.id).subscribe(() => {\n      this.photos.filter(p => p.isMain === true)[0].isMain = false;\n      photo.isMain = true;\n      this.getMemberPhotoChange.emit(photo.url);\n\n      this.authService.changMemberPhoto(photo.url);\n      this.authService.currentUser.photoUrl = photo.url;\n      localStorage.setItem('user', JSON.stringify(this.authService.currentUser));\n\n\n    }, error => {\n      this.aletify.error(error);\n    });\n  }\n\n  deletePhoto(id: number) {\n    this.userService.deletePhoto(this.authService.decodedToken.nameid, id).subscribe(\n      () => {\n        this.photos.splice(this.photos.findIndex(p => p.id === id), 1);\n        this.aletify.success('Photo has been deleted');\n\n      }, error => {\n        this.aletify.error('Failed to delete the photo');\n      }\n    );\n  }\n\n}\n","<form [formGroup]=\"registerForm\" (ngSubmit)=\"register()\">\n  <h2 class=\"text-center text-primary\">Sign Up</h2>\n  <hr>\n\n  <div class=\"form-group\">\n    <input type=\"text\" class=\"form-control\" placeholder=\"Username\"\n     formControlName=\"username\" \n    [ngClass]=\"{'is-invalid': registerForm.get('username').errors && registerForm.get('username').touched}\"\n    >\n    <div class=\"invalid-feedback\">Please choose a user name</div>\n  </div>\n\n<!-- \n  ====\nradio buttons\n====  -->\n\n <div class=\"form-group\">\n    <label class=\"control-label\" style=\"margin-right:10px\">I am a: </label>\n    <label class=\"radio-inline\">\n      <input class=\"mr-3\" type=\"radio\" value=\"male\" formControlName=\"gender\">Male\n    </label>\n    <label class=\"radio-inline ml-3\">\n      <input class=\"mr-3\" type=\"radio\" value=\"female\" formControlName=\"gender\">Female\n    </label>\n  </div>\n\n<!-- =====\nknown as\n===== -->\n\n  <div class=\"form-group\">\n    <input [ngClass]=\"{'is-invalid': registerForm.get('knownAs').errors && registerForm.get('knownAs').touched}\" class=\"form-control\"\n      placeholder=\"Known as\" formControlName=\"knownAs\">\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('knownAs').touched && registerForm.get('knownAs').hasError('required')\">Known as is required</div>\n  </div>\n\n<!-- =====\ndate of birth\n===== -->\n\n\n    <div class=\"form-group\">\n        <input [ngClass]=\"{'is-invalid': registerForm.get('dateOfBirth').errors && registerForm.get('dateOfBirth').touched}\" class=\"form-control\"\n          placeholder=\"Date of Birth\" formControlName=\"dateOfBirth\" type=\"text\" bsDatepicker [bsConfig]='bsConfig'>\n        <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('dateOfBirth').touched && registerForm.get('dateOfBirth').hasError('required')\">Date of Birth is required</div>\n      </div>\n\n<!-- =====\ncity and country\n===== -->\n\n  <div class=\"form-group\">\n    <input [ngClass]=\"{'is-invalid': registerForm.get('city').errors && registerForm.get('city').touched}\" class=\"form-control\"\n      placeholder=\"City\" formControlName=\"city\">\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('city').touched && registerForm.get('city').hasError('required')\">City is required</div>\n  </div>\n\n  <div class=\"form-group\">\n    <input [ngClass]=\"{'is-invalid': registerForm.get('country').errors && registerForm.get('country').touched}\" class=\"form-control\"\n      placeholder=\"Country\" formControlName=\"country\">\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('country').touched && registerForm.get('country').hasError('required')\">Country is required</div>\n  </div>\n\n\n\n\n\n\n\n\n\n\n\n \n  <div class=\"form-group\">\n    <input type=\"password\" class=\"form-control\" placeholder=\"Password\"\n     formControlName=\"password\" \n     [ngClass]=\"{'is-invalid': registerForm.get('password').errors && registerForm.get('password').touched}\"\n    >\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('password').hasError('required') \n    && registerForm.get('password').touched\">Password is required</div>\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('password').hasError('minlength') \n    && registerForm.get('password').touched\">Password must be at least 4 chars</div>\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('password').hasError('maxlength') \n    && registerForm.get('password').touched\">Password cannot exceed 8 chars</div>\n  </div>\n\n  <div class=\"form-group\">\n    <input type=\"password\" class=\"form-control\" placeholder=\"confirmPassword\"\n     formControlName=\"confirmPassword\" \n     [ngClass]=\"{'is-invalid': registerForm.get('confirmPassword').errors && \n     registerForm.get('confirmPassword').touched || registerForm.get('confirmPassword').touched\n     && registerForm.hasError('mismatch')}\"\n    >\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.get('confirmPassword').hasError('required') \n    && registerForm.get('confirmPassword').touched\">Confim Password is required</div>\n    <div class=\"invalid-feedback\" *ngIf=\"registerForm.hasError('mismatch') \n    && registerForm.get('confirmPassword').touched\"> Password must match</div>\n  </div>\n\n  <div class=\"form-group text-center\">\n    <button class=\"btn btn-success\" type=\"submit\" [disabled]=\"!registerForm.valid\">Register</button>\n    <button class=\"btn btn-default\" type=\"button\" (click)=\"cancel()\">Cancel</button>\n\n  </div>\n\n\n\n</form>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { AuthService } from '../_services/auth.service';\nimport {AlertifyService} from '../_services/alertify.service';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { BsDatepickerConfig } from 'ngx-bootstrap';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  @Input() valuesFromHome: any;\n  @Output() cancelRegister = new EventEmitter();\n\n  model: any = {};\n\n  registerForm: FormGroup;\n  bsConfig: Partial<BsDatepickerConfig>;\n\n  constructor(private authService: AuthService, private alertify: AlertifyService, private fb: FormBuilder,\n              private router: Router) { }\n\n  ngOnInit() {\n    // this.registerForm = new FormGroup({\n    //   username: new FormControl('', Validators.required),\n    //   password: new FormControl('', [Validators.required, Validators.minLength(4), Validators.maxLength(8)]),\n    //   confirmPassword: new FormControl('', Validators.required)\n    // }, this.passwordMatchValidator);\n\n    this.bsConfig = {\n      containerClass: 'theme-red'\n    };\n\n    this.createRegisterForm();\n  }\n\n  createRegisterForm() {\n    this.registerForm = this.fb.group({\n      gender: ['male'],\n      username: ['', Validators.required],\n      knownAs: ['', Validators.required],\n      dateOfBirth: [null, Validators.required],\n      city: ['', Validators.required],\n      country: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(8)]],\n      confirmPassword: ['', Validators.required]\n    }, {validator: this.passwordMatchValidator});\n  }\n\n  passwordMatchValidator(g: FormGroup) {\n    return g.get('password').value === g.get('confirmPassword').value ? null : {mismatch: true};\n  }\n\n  register() {\n    // this.authService.register(this.model).subscribe(\n    //   next => {\n    //     console.log('register successfully.');\n    //     this.alertify.success(' Register successfully');\n    //   },\n    //   error => {\n    //     console.log(error);\n    //     this.alertify.error('Register error');\n    //   }\n\n    // );\n\n    if (this.registerForm.valid) {\n      this.model = Object.assign({}, this.registerForm.value);\n      this.authService.register(this.model).subscribe(() => {\n        this.alertify.success('Registration successful');\n      }, error => {\n        this.alertify.error(error);\n      }, () => {\n        this.authService.login(this.model).subscribe(() => {\n          this.router.navigate(['/members']);\n        });\n      });\n    }\n\n  }\n\n  cancel() {\n    this.cancelRegister.emit(false);\n    console.log('logged out');\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:5000/api/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}